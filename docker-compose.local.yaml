services:

  usr-srv-rest:
    container_name: user_service_rest
    build:
      context: .
      dockerfile: Dockerfile.user
    restart: always
    ports: 
      - 9000:9000
      - 9092:9092
    environment:
      PORT: 9000
      API: "REST"
      METRICS_ADDR: ":9092"

  
  usr-srv-grpc:
    container_name: user_service_grpc 
    build:
      context: .
      dockerfile: Dockerfile.user
    restart: always
    ports: 
      - 20001:20001
      - 9091:9091
    environment:
      PORT: 20001
      API: "GRPC"
      ACCESS_SECRET: "secret"
      REFRESH_SECRET: "secret"
      METRICS_ADDR: ":9091"

  chat-srv:
    container_name: chat_service
    build:
      context: .
      dockerfile: Dockerfile.ws
    restart: always
    ports: 
      - 2000:2000
    environment:
      PORT: 2000
      AUTH_SERVICE: "usr-srv-grpc:20001"

  notif-srv:
    container_name: notif_service
    build:
      context: .
      dockerfile: Dockerfile.notif
    restart: always
    ports: 
      - 4200:4200
      - 9093:9093
    environment:
      PORT: 4200
      AUTH_SERVICE: "usr-srv-grpc:20001"
      METRICS_ADDR: ":9093"
      KAFKA_ADDR: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      KAFKA_TOPICS: "user"
      KAFKA_GROUP: "notifications"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka-1:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9095:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://kafka-1:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,OUTSIDE://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 300
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-2:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9096:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-2:9092,OUTSIDE://kafka-2:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,OUTSIDE://localhost:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 301
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  kafka-3:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9097:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-3:9092,OUTSIDE://kafka-3:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9092,OUTSIDE://localhost:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 302
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  elasticsearch:
    image: elastic/elasticsearch:8.15.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  logstash:
    image: elastic/logstash:8.15.4
    container_name: logstash
    volumes:
      - ./observ/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    environment:
      LOGSTASH_PORT: 5000
      LOGSTASH_INDEX: "%{+YYYY.MM.dd}"
      ELASTIC_HOST: "elasticsearch:9200"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "elastic"

  kibana:
    image: elastic/kibana:8.15.4
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./observ/prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./observ/grafana:/etc/grafana/provisioning/datasources

volumes:
  esdata:
    driver: local
